apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "client.fullname" . }}
  labels:
    {{- include "client.labels" . | nindent 4 }}
    app.kubernetes.io/part-of: {{ .Values.business_application }}
    app.kubernetes.io/name: {{ .Release.Name }}
spec:
  ttlSecondsAfterFinished: 60
  template:
    metadata:
      labels:
        app.kubernetes.io/part-of: {{ .Values.business_application }}
        app.kubernetes.io/name: {{ .Release.Name }}
    spec:
      containers:
      - name: chaosclient
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{.Values.image.pullPolicy}}
        args:
          - "client"
          - "-p"
          - {{.Values.chaos.plan | quote}}
          - "--host"
          - {{.Values.chaos.host| quote}}
          - "--port"
          - {{.Values.chaos.port| quote}}
          {{ if .Values.chaos.header }}
          - "--header"
          - {{.Values.chaos.header| quote}}
          {{ end }}
        env:
          {{- include "otel.env" . | nindent 10 }}
          - name: GOMAXPROCS
            valueFrom:
              resourceFieldRef:
                resource: limits.cpu
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: DEPLOYMENT_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.labels['app.kubernetes.io/name']
        volumeMounts:
          - name: chaos-plans
            mountPath: /plans
          - name: chaos-scenarios
            mountPath: /scenarios
      volumes:
        - name: chaos-plans
          configMap:
            name: {{include "client.fullname" .}}-plans
        - name: chaos-scenarios
          configMap:
            name: {{include "client.fullname" .}}-scenarios 
      restartPolicy: Never