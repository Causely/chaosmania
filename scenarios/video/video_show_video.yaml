phases:
- client:
    workers:
    - delay: 2ms
      duration: 672h
      instances: 1
  name: phase1
  setup:
    actions: []
  workload:
    actions:
    - config:
        script: |
          function run() {
            // Send a request for authentication
            ctx.http_post(ctx.ctx, "http://auth:8080", {actions:[{name:Script,config:{script:function run() {
              // Burn
              ctx.burn("10ms");
              auth_cache = ctx.get_service("auth-cache");
              auth_cache.set(ctx.ctx, key, value);
              auth_cache.get(ctx.ctx, key);
            }}}]});
    
            ctx.http_post(ctx.ctx, "http://inventory:8080", {actions:[{name:Script,config:{script:function run() {
              ctx.burn("10ms");
              inventory_db = ctx.get_service("inventory-db");
              inventory_db.query(ctx.ctx, "CREATE TABLE IF NOT EXISTS videos (id text PRIMARY KEY, status text, created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP);");
              videos = inventory_db.query(ctx.ctx, "SELECT * FROM videos ORDER BY created_atDESC LIMIT 1;");
              storage = ctx.get_service("storage");
              vid = storage.get_object(ctx.ctx, videos, videos[0].id);
              ctx.print("Got video: " + videos[0].id + " with size: " + vid.length + " bytes");
            }}}]}); 
          }
      name: Script
